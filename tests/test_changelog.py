#
# Copyright (C) 2020  Red Hat, Inc.
# Author(s):  David Cantrell <dcantrell@redhat.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

from baseclass import *

# changelog tests only apply to Koji builds, binary RPMs, or source RPMs.
# Perform the following each as a separate test:
#
# In the source RPM:
# 1) Remove the %changelog section in the after build.  The test should
#    report that as VERIFY.
class LostChangeLogSRPM(TestSRPMs):
    def setUp(self):
        TestSRPMs.setUp(self)
        self.rpm.section_changelog = None
        self.inspection = 'changelog'
        self.label = 'changelog'
        self.result = 'VERIFY'

class LostChangeLogRPM(TestRPMs):
    def setUp(self):
        TestRPMs.setUp(self)
        self.rpm.section_changelog = None
        self.inspection = 'changelog'
        self.label = 'changelog'
        self.result = 'VERIFY'

class ListChangeLogKoji(TestKoji):
    def setUp(self):
        TestKoji.setUp(self)
        self.after_rpm.section_changelog = None
        self.inspection = 'changelog'
        self.label = 'changelog'
        self.result = 'VERIFY'

# 2) Prevent a %changelog in the before build but add one in the after
#    build.  The test should report that as INFO.
# 3) If the first entries in the changelog as the same in the before and
#    after build, the test should report it as BAD.
#
# In the binary RPM:
# 1) Change some lines in the after build's %changelog.  The test should
#    report that as VERIFY.  If the number of add and delete lines in the
#    diff are balanced, this is reported as INFO.  There have to be more
#    delete lines than add lines to get VERIFY.
# 2) Only add a new entry to the %changelog in the after build.  This
#    should report as INFO.
# 3) Add unprofessional language to the after build %changelog and make
#    sure that is reported as BAD.
#
# Make sure the diff generated by librpminspect can be applied by patch.
# Do a normal edit like adding an entry and then changing a date stamp
# on an existing entry.  Use diff(1) manually on those changelogs.  Then
# run rpminspect and capture the diff output in the results.  Compare
# these diffs with diff (making sure to trim the --- and +++ leading lines
# from the manually created diff).  If diff returns anything other than
# zero, fail the test.

.\"	$Id$
.\"
.\" Copyright (c) 2018 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining
.\" a copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or sell copies of the Software, and to
.\" permit persons to whom the Software is furnished to do so, subject to
.\" the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be
.\" included in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
.\" NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
.\" BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
.\" ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
.\" CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt DIFF 3
.Os
.Sh NAME
.Nm diff
.Nd generate arbitrary sequence diffs
.Sh LIBRARY
.Lb libdiff
.Sh SYNOPSIS
.In diff.h
.Ft int
.Fo diff
.Fa "struct diff *p"
.Fa "int (*cmp)(const void *, const void *)"
.Fa "size_t size"
.Fa "const void *base1"
.Fa "size_t nmemb1"
.Fa "const void *base2"
.Fa "size_t nmemb2"
.Fc
.Sh DESCRIPTION
The
.Fn diff
function generates the shortest edit script, longest common subsequence,
and edit distance going from an origin array of
.Fa nmemb1
objects, the initial member of which is pointed to as
.Fa base1 ;
to the target array of
.Fa nmemb2
objects with initial member
.Fa base2 .
The size of each object is specified by
.Fa size .
Objects are compared by
.Fa cmp ,
which requires two arguments pointing to the objects being compared.
It returns zero if the objects are the same, non-zero otherwise.
.Pp
On success,
.Fn diff
sets the edit distance in
.Fa p->editdist .
It allocates the
.Fa p->ses
array of length
.Fa p->sessz
and fills it with the shortest common subsequence.
It also allocates the
.Fa p->lcs
array of length
.Fa p->lcssz
and fills it with the longest common subsequence.
Both arrays must be passed to
.Xr free 3
by the caller.
.Sh RETURN VALUES
The
.Fn diff
function returns <0 on memory allocation failure, 0 if the sequence is
too complicated to generate, or >0 otherwise on success.
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.Sh EXAMPLES
The following example takes two strings,
.Qq asdf
and
.Qq fdsa ,
and displays the edit script to go from the first to the second.
.Bd -literal
int cmp(const void *p1, const void *p2) {
    return *(const char *)p1 == *(const char *)p2;
}

void compute(void) {
    size_t i;
    int rc;
    struct diff p;

    rc = diff(&p, cmp, 1, "asdf", 4, "fdsa", 4);

    if (rc < 0)
        err(EXIT_FAILURE, NULL);
    if (0 == rc)
        errx(EXIT_FAILURE, "cannot compute distance");

    for (i = 0; i < p.sessz; i++)
        printf("%s%c\en",
            DIFF_ADD == p.ses[i].type ?  "+" :
            DIFF_DELETE == p.ses[i].type ?  "-" : " ",
            *(const char *)p.ses[i].e);
    free(p.ses);
    free(p.lcs);
}
.Ed
.Pp
The second example looks for difference in words.
.Bd -literal
int cmp(const void *p1, const void *p2) {
    return 0 == strcmp
        (*(const char **)p1, *(const char **)p2);
}

void compute(void) {
    size_t i;
    int rc;
    struct diff p;
    const char *origin[] = { "hello", "there" };
    const char *target[] = { "hello", "world" };

    rc = diff(&p, cmp, sizeof(char *), origin, 2, target, 2);

    if (rc < 0)
        err(EXIT_FAILURE, NULL);
    if (0 == rc)
        errx(EXIT_FAILURE, "cannot compute distance");

    for (i = 0; i < p.sessz; i++)
        printf("%s%s\en",
            DIFF_ADD == p.ses[i].type ?  "+" :
            DIFF_DELETE == p.ses[i].type ?  "-" : " ",
            *(const char **)p.ses[i].e);
    free(p.ses);
    free(p.lcs);
}
.Ed
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Rs
.%A Wu Sun
.%A Manber Udi
.%A Myers Gene
.%T An O(NP) sequence comparison algorithm
.%J Information Processing Letters
.%V Volume 35
.%I Issue 6
.%D 1990
.Re
.\" .Xr foobar 1
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
